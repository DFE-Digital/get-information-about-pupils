name: Run Smoke Tests

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment being tested (development, test, preproduction, production)'
      app_url:
        required: true
        type: string
        description: 'URL of the deployed application to test'

jobs:
  smoke_test:
    runs-on: ubuntu-latest

    steps:
      # TODO: Consider if HTTP status 200 is actually expected - instead, may be a redirect to login
      - name: Run smoke tests with retries
        id: smoke-test
        shell: pwsh
        run: |
          $appUrl = "${{ inputs.app_url }}"
          Write-Host "Running smoke tests against: $appUrl"

          $maxRetries = 10
          $retryDelaySeconds = 30
          $currentRetry = 0
          $success = $false

          while (-not $success -and $currentRetry -lt $maxRetries) {
              $currentRetry++
              Write-Host "Attempt $currentRetry of $maxRetries"

              try {
                  Write-Host "Test: Checking if the home page loads..."
                  $homePageResponse = Invoke-WebRequest -Uri $appUrl -UseBasicParsing -MaximumRedirection 5 -TimeoutSec 30

                  if ($homePageResponse.StatusCode -ne 200) {
                      throw "Home page returned status code: $($homePageResponse.StatusCode)"
                  }

                  Write-Host "Home page loaded successfully with status code: $($homePageResponse.StatusCode)"
              } catch {
                  if ($currentRetry -lt $maxRetries) {
                      Write-Host "❌ Attempt $currentRetry failed: $($_.Exception.Message)"
                      Write-Host "Waiting $retryDelaySeconds seconds before retrying..."
                      Start-Sleep -Seconds $retryDelaySeconds
                  } else {
                      Write-Host "::error::Smoke test failed after $maxRetries attempts: $($_.Exception.Message)"
                      Write-Host "::error::Response details (if available):"
                      if ($_.Exception.Response) {
                          Write-Host "::error::Status code: $($_.Exception.Response.StatusCode)"
                      }
                      exit 1
                  }
              }
          }

          if (-not $success) {
              Write-Host "::error::All retry attempts failed"
              exit 1
          }

      - name: Test results summary
        if: always()
        shell: pwsh
        run: |
          Write-Host "Smoke testing for ${{ inputs.environment }} environment completed"
          Write-Host "Application URL: ${{ inputs.app_url }}"

          if ("${{ steps.smoke-test.outcome }}" -eq "success") {
              Write-Host "✅ Smoke tests passed - deployment verified successfully"
          } else {
              Write-Host "❌ Smoke tests failed - please check the application logs"
              exit 1
          }
