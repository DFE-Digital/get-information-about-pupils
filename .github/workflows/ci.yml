name: giap-web-ci

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      buildConfiguration: Release
      solutionDirectory: ./DfE.GIAP.All

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '12'

    - name: Setup .NET SDK from global.json
      uses: actions/setup-dotnet@v4

    - name: Install NuGet
      uses: NuGet/setup-nuget@v1

    - name: npm install
      run: npm install
      working-directory: ${{ env.solutionDirectory }}/DfE.GIAP.Web

    - name: Add DfEDigital NuGet Feed
      run: dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name dfedigital "https://nuget.pkg.github.com/DFE-Digital/index.json"

    - name: Restore NuGet packages
      run: dotnet restore *.sln
      working-directory: ${{ env.solutionDirectory }}
      
    - name: Build solution
      run: dotnet build *.sln --configuration ${{ env.buildConfiguration }} --no-restore -p:SkipInvalidConfigurations=true 
       
      # These are specific to windows-latest msdeploy so have been removed temporarily
      #-p:DesktopBuildPackageLocation="${{ github.workspace }}\WebApp.zip"
      # -p:DeployOnBuild=true -p:WebPublishMethod=Package -p:PackageAsSingleFile=true -p:DeployIisAppPath="Default Web Site"
      working-directory: ${{ env.solutionDirectory }}
      
    - name: Run unit tests
      run: dotnet test *.sln --configuration ${{ env.buildConfiguration }} --collect "XPlat Code coverage" -- RunConfiguration.DisableAppDomain=true
      working-directory: ${{ env.solutionDirectory }}
      
    - name: Install ReportGenerator tool
      run: dotnet tool install --tool-path ./tools dotnet-reportgenerator-globaltool --version 4.5.8
      working-directory: ${{ env.solutionDirectory }}

    - name: Generate test coverage reports
      run: ./tools/reportgenerator -reports:**/coverage.cobertura.xml -targetdir:./coverlet/reports -reporttypes:"Cobertura" -assemblyfilters:-DfE.GIAP.Web.Views;-DfE.GIAP.Service.Tests
      working-directory: ${{ env.solutionDirectory }}

    - name: Upload test coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ${{ env.solutionDirectory }}/coverlet/reports/Cobertura.xml

    - name: Run gulp
      run: |
        npm install -g gulp
        gulp default --gulpfile DfE.GIAP.Web/gulpfile.js --cwd DfE.GIAP.Web
      working-directory: ${{ env.solutionDirectory }}
#    - name: Upload build artifact
#      uses: actions/upload-artifact@v4
#      with:
#        name: WebApp
#        path: WebApp.zip

    - name: Verify formatting
      run: dotnet format --include DfE.GIAP.Core/ DfE.GIAP.Core.UnitTests/ --verify-no-changes
      working-directory: ./DfE.GIAP.All
