@model LearnerNumberSearchViewModel

<form asp-action="@Model.SearchAction" method="POST">

    <input id="toggleSelectAll" type="hidden" name="ToggleSelectAll" value="@Model.ToggleSelectAll.ToString()" />
    <input id="@Model.LearnerNumber" name="LearnerNumber" type="hidden" value="@Model.LearnerNumber">
    <input type="hidden" id="LearnerIdSearchResult" name="LearnerIdSearchResult" value="@Model.LearnerIdSearchResult" />
    <input type="hidden" id="LearnerNumberIds" name="LearnerNumberIds" value="@Model.LearnerNumberIds" />

    @if (string.IsNullOrEmpty(Model.ErrorDetails) && Model.ItemAddedToMyPupilList && !Model.NoPupilSelected)
    {
        <div class="govuk-inset-text">@ApplicationLabel.SelectedAddedToMyPupilList</div>
    }
    @if (!string.IsNullOrEmpty(Model.ErrorDetails) && Model.ErrorDetails.ToString().Equals(CommonErrorMessages.MyPupilListLimitExceeded))
    {
        <partial name="~/Views/Search/MyPupilList/_AddToMyPupilListError.cshtml" />
    }

    @if (!string.IsNullOrEmpty(Model.ErrorDetails) && Model.ErrorDetails.ToString().Equals(DownloadErrorMessages.UPNLimitExceeded))
    {
        <partial name="~/Views\Shared\_CTFLimitError.cshtml" />
    }

    @if (Model.Invalid.Any() || Model.Duplicates.Any() || Model.NotFound.Any())
    {
        <div class="govuk-warning-text">
            <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
            <strong class="govuk-warning-text__text">
                <span class="govuk-warning-text__assistive">Warning</span>
                <span>
                    One or more @(Model.LearnerNumberLabel)(s) have not been found or are duplicate. Only those @(Model.LearnerNumberLabel)(s) found will be shown.
                </span>
            </strong>
        </div>

        <noscript>
            @if (Model.ShowErrors)
            {
                <button class="govuk-button govuk-button--secondary" type="submit" name="ShowErrors" value="false">Show valid @(Model.LearnerNumberLabel)s</button>
            }
            else
            {
                <button class="govuk-button govuk-button--secondary" type="submit" name="ShowErrors" value="true">Show @(Model.LearnerNumberLabel)s not found, invalid or duplicate</button>
            }
        </noscript>

        <div id="toggleCheckbox" class="govuk-checkboxes govuk-!-padding-bottom-5 hide-for-non-js">
            <div class="govuk-checkboxes__item">
                <input class="govuk-checkboxes__input" id="toggleErrors" name="toggleErrors" type="checkbox" data-val="true" value="true">
                <label for="toggleErrors" class="govuk-label govuk-checkboxes__label">
                    <span id="errors-show">Show @(Model.LearnerNumberLabel)s not found, invalid or duplicate</span>
                </label>
            </div>
        </div>
        <div class="webapp-results"></div>
    }

    @if (!Model.ShowErrors && (Model.Learners != null && Model.Learners.Any() && ViewData.ModelState.IsValid))
    {
        <div class="download-block">
            <div class="govuk-inset-text">
                @if (Model.ToggleSelectAll)
                {
                    <span>Please be aware that by pressing Deselect all pupils may take time to process</span>
                }
                else
                {
                    <span>Please be aware that by pressing Select all pupils may take time to process</span>
                }
            </div>

            <div class="govuk-grid-row">
                <div class="govuk-grid-column-one-quarter">

                    @if (Model.ToggleSelectAll)
                    {
                        <button asp-action="@Model.SearchAction" asp-route-pageNumber="@Model.PageNumber" class="govuk-button govuk-button--secondary" type="submit" name="SelectAllNoJsChecked" value="false">Deselect all pupils</button>
                    }
                    else
                    {
                        <button asp-action="@Model.SearchAction" asp-route-pageNumber="@Model.PageNumber" class="govuk-button govuk-button--secondary" type="submit" name="SelectAllNoJsChecked" value="true">Select all pupils</button>
                    }
                </div>

                <partial name="@Model.DownloadLinksPartial" />
            </div>
        </div>
    }
    @if (Model.Invalid.Any() && (Model.Learners != null && Model.Learners.Any() && ViewData.ModelState.IsValid))
    {
        <div class="error-table hide-for-non-js @(Model.ShowErrors ? "display-results" : "")">
            <div id="pupil--list--table">
                <div class="giap--pupil-list">
                    <table class="govuk-table">
                        <thead class="govuk-table__head">
                            <tr class="govuk-table__row">
                                <th scope="col" class="govuk-table__header" id="search--search-pupils-heading-not-found--text">Invalid @(Model.LearnerNumberLabel)s</th>
                            </tr>
                        </thead>
                        <tbody class="govuk-table__body">
                            @foreach (var upn in Model.Invalid)
                            {
                                <tr>
                                    <td class="govuk-table__cell" id="search--search-pupils-not-found-data-upn--">@upn</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.NotFound.Any())
    {
        <div class="error-table hide-for-non-js @(Model.ShowErrors ? "display-results" : "")">
            <div id="pupil--list--table">
                <div class="giap--pupil-list">
                    <table class="govuk-table">
                        <thead class="govuk-table__head">
                            <tr class="govuk-table__row">
                                <th scope="col" class="govuk-table__header" id="search--search-pupils-heading-not-found--text">@(Model.LearnerNumberLabel)s not found</th>
                            </tr>
                        </thead>
                        <tbody class="govuk-table__body">
                            @foreach (var upn in Model.NotFound)
                            {
                                <tr>
                                    <td class="govuk-table__cell" id="search--search-pupils-not-found-data-upn--">@upn</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.Duplicates.Any())
    {
        <div class="error-table hide-for-non-js @(Model.ShowErrors ? "display-results" : "")">
            <div id="pupil--list--table">
                <div class="giap--pupil-list">
                    <table class="govuk-table">
                        <thead class="govuk-table__head">
                            <tr class="govuk-table__row">
                                <th scope="col" class="govuk-table__header" id="search--search-pupils-heading-not-found--text">Duplicate @(Model.LearnerNumberLabel)s</th>
                            </tr>
                        </thead>
                        <tbody class="govuk-table__body">
                            @foreach (var upn in Model.Duplicates)
                            {
                                <tr>
                                    <td class="govuk-table__cell" id="search--search-pupils-not-found-data-upn--">@upn</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (Model.Learners != null && Model.Learners.Any() && ViewData.ModelState.IsValid)
    {
        <div class="result-table @(Model.ShowErrors ? "hide-for-non-js" : "")">
            @(await Component.InvokeAsync("PaginatedResult", new
            {
                learners = Model.Learners,
                pageLearnerNumbers = Model.PageLearnerNumbers,
                learnerNumberLabel = Model.LearnerNumberLabel,
                showMiddleNames = Model.ShowMiddleNames,
                showNoSelectedError = Model.NoPupil,
                allowMultipleSelection = true,
                pageNumber = Model.PageNumber,
                pageSize = Model.PageSize,
                total = Model.Total,
                controllerAction = Model.SearchAction,
                showPP = false,
                showLocalAuthority = Model.ShowLocalAuthority,
                activeSortField = Model.SortField,
                activeSortDirection = Model.SortDirection
            }))
        </div>
    }
</form>
